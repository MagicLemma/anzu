program:
  | [statement]*

literal:
  | int_literal
  | bool_literal
  | string_literal
  | list_literal

expression:
  | disjunction

disjunction:
  | disjunction '||' conjunction
  | conjunction

conjunction:
  | conjunction '&&' comparison
  | comparison

comparison:
  | comparison ('<'|'<='|'>'|'>='|'=='|'!=') sum
  | sum

sum:
  | sum ('+'|'-') term
  | term

term:
  | term ('*'|'/'|'%') factor
  | factor

factor:
  | literal
  | variable_name
  | '(' expression ')'

statement:
  | function-def-stmt
  | while-stmt
  | if-stmt
  | for-stmt
  | 'return' [expression]
  | 'break'
  | 'continue'
  | function_identifier
  | builtin_identifier
  | op_code  # This is temporary and will be removed

function_identifier:
  | string_literal

builtin_identifier:
  | string_literal

function-def-stmt:
  | 'function' '(' function-sig ')' ['->' type] statement

function-sig:
  | name [':' type] [',' name [':' type]]*

while-stmt:
  | 'while' expression statement

if-stmt:
  | 'if' expression statement 'else' statement

for-stmt:
  | 'for' variable_name 'in' expression statement