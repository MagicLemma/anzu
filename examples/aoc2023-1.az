module io := "lib/io.az";
module str := "lib/str.az";

fn is_digit(c: char) -> bool
{
    for x in "0123456789" {
        if c == x@ { return true; }
    }
    return false;
}

arena a;
let input := io.read_file("examples/aoc2023-1-input.txt", a&);

let mapping := [
    [ "one"   , "o1e" ],
    [ "two"   , "t2o" ],
    [ "three" , "t3e" ],
    [ "four"  , "f4r" ],
    [ "five"  , "f5e" ],
    [ "six"   , "s6x" ],
    [ "seven" , "s7n" ],
    [ "eight" , "e8t" ],
    [ "nine"  , "n9e" ]
];

var total_part1 := 0;
var total_part2 := 0;

var line := "m5";
for map in mapping[] {
    line = str.replace(a&, line, map@[0u], map@[1u]);
}
print("matt: {}\n", line);

#var tokens := str.tokenizer.create(input, '\n');
#var x := 0;
#while tokens.valid() {
#    var line := tokens.current();
#
#    #for map in mapping[] {
#    #    line = str.replace(a&, line, map@[0u], map@[1u]);
#    #}
#
#    print("{} {}\n", x, line);
#
#    tokens.advance();
#    x = x + 1;
#}