let io := @import("lib/io.az");
let vec := @import("lib/vector.az");
let str := @import("lib/str.az");
let util := @import("lib/utility.az");

arena a;
let file := io.read_file("examples/aoc2024-1-input.txt", a&);
var l := vec.vector!(i64).create(a&);
var r := vec.vector!(i64).create(a&);
var counts := [0; 1000u];

var lines := str.tokenizer.create(file, "\r\n");
while lines.valid() {
    let line := lines.advance();

    var splitter := str.tokenizer.create(line, "   ");
    l.push(str.str_to_i64(splitter.advance()));

    let right_val := str.str_to_i64(splitter.advance());
    let right_u64 := right_val as u64;
    r.push(right_val);
    counts[right_u64] = counts[right_u64] + 1;
    assert !splitter.valid();
}

util.sort(l.to_span());
util.sort(r.to_span());

assert l.size() == r.size();
var idx := 0u;
var part1 := 0;
var part2 := 0;
while idx < l.size() {
    part1 = part1 + util.abs(l.at(idx) - r.at(idx));
    part2 = part2 + counts[l.at(idx) as u64] * l.at(idx);
    idx = idx + 1u;
}
print("{}\n{}\n", part1, part2);