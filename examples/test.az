struct range_iter!(T)
{
    _curr: T;
    _max: T;

    fn valid(self: const&) -> bool
    {
        return self._curr < self._max;
    }

    fn next(self: &) -> T
    {
        let ret := self._curr;
        self._curr = self._curr + (1 as T);
        return ret;
    }
}

fn range!(T)(max: T) -> range_iter!(T)
{
    assert T == i64 || T == u64;
    return range_iter!(T)(0 as T, max);
}

for x in range(10u) {
    print("{}\n", x);
}