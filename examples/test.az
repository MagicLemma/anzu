
struct unique_int
{
    val: null;

    fn copy(self: &unique_int) -> unique_int
    {
        println("copying");
        return unique_int(null);
    }

    fn assign(self: &unique_int, other: &unique_int)
    {
        println("assigning");
    }

    fn drop(self: &unique_int)
    {
        println("dropping");
    }
}

fn add(x: i64, y: i64) -> i64
{
    return x + y;
}

fn myfunc(x: unique_int)
{
    println(x.val);
}

{
    #x := [unique_int(null), unique_int(null)];
    #y := x;
    #y = x;
    #println(y[0u].val);

    [unique_int(null)];
    println("after");
}